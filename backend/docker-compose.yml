version: '3.9'
services:
    mysql_users:
        image: mysql
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: usersDB
            MYSQL_USER: admin
            MYSQL_PASSWORD: admin
            MYSQL_TCP_PORT: 3306
        container_name: mysql_users
        ports:
            - 3307:3306
        expose:
            - 3307
        volumes:
            - db-users:/var/lib/mysql
      
    mysql_restaurants:
        image: mysql
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: restaurantDB
            MYSQL_USER: admin
            MYSQL_PASSWORD: admin
            MYSQL_TCP_PORT: 3306
        container_name: mysql_restaurants
        ports:
            - 3308:3306
        expose:
            - 3308
        volumes:
            - db-restaurants:/var/lib/mysql

    users:
        build:
            dockerfile: Dockerfile
            context: ./users
        container_name: users
        ports:
            - '3001:3001'
        environment:
            - DATABASE_URL=mysql://root:root@mysql_users:3306/usersDB
        volumes:
            - .:/app
            - /src:/app/src:z
        depends_on:
            - mysql_users
        restart: always
        entrypoint: ['sh', '-c', 'npx prisma migrate deploy && npm run dev']

    restaurants:
        build:
            dockerfile: Dockerfile
            context: ./restaurants
        container_name: restaurants
        ports:
            - '3002:3002'
        environment:
            - DATABASE_URL=mysql://root:root@mysql_users:3306/restaurantsDB
        volumes:
            - .:/app
            - /src:/app/src:z
        depends_on:
            - mysql_users
        restart: always
        entrypoint: ['sh', '-c', 'npx prisma migrate deploy && npm run dev']

    nginx-proxy:
        build:
            dockerfile: Dockerfile
            context: ./proxy
        depends_on:
            - users
            - restaurants
        ports:
          - "80:80"

volumes:
    db-users:
    db-restaurants: